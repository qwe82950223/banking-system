/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package banking;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author xiao lin
 */
public class StaffJFrame extends javax.swing.JFrame {

    /**
     * Creates new form StaffJFrame
     */
    public StaffJFrame() {
        initComponents();
        try {
            printTable();
        } catch (SQLException ex) {
            Logger.getLogger(StaffJFrame.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        search = new javax.swing.JButton();
        searchfield = new javax.swing.JTextField();
        choose = new javax.swing.JComboBox<>();
        error = new javax.swing.JLabel();
        getinfo = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {public boolean isCellEditable(int row, int column){return false;}}
    );
    table.setFocusable(false);
    jScrollPane1.setViewportView(table);

    search.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
    search.setForeground(java.awt.Color.blue);
    search.setText("Search");
    search.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchActionPerformed(evt);
        }
    });

    searchfield.setToolTipText("");
    searchfield.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            searchfieldActionPerformed(evt);
        }
    });

    choose.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
    choose.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Account Number", "Phone Number" }));

    error.setForeground(java.awt.Color.red);

    getinfo.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
    getinfo.setText("get Info");
    getinfo.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            getinfoActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addGap(44, 44, 44)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 233, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(choose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(searchfield, javax.swing.GroupLayout.PREFERRED_SIZE, 198, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(28, 28, 28)
                            .addComponent(search, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGroup(layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 583, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(35, 35, 35)
                    .addComponent(getinfo, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
                    .addGap(25, 25, 25))))
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap(32, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                .addComponent(getinfo, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(search, javax.swing.GroupLayout.DEFAULT_SIZE, 36, Short.MAX_VALUE)
                        .addComponent(searchfield, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(choose, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGap(11, 11, 11)
                    .addComponent(error, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGap(40, 40, 40))
    );

    pack();
    }// </editor-fold>                        

    private void searchfieldActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
    }                                           

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {                                       
        // TODO add your handling code here:
        if(searchfield.getText() == null){
            error.setText("Search box can not be empty!");
        }else{
            try{
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/banking", "root", "root");
            String c = choose.getSelectedItem().toString();
            String un;
            if(c == "Account Number"){ // check if user enter the correct account number 
                String getaccountsql = "SELECT * from ACCOUNT WHERE ACCOUNTNUMBER = '" +searchfield.getText()+"'";
                ResultSet accountrs = con.createStatement().executeQuery(getaccountsql);
                if(accountrs.next()){
                    un = accountrs.getString("USERNAME");//get hte username
                }else{
                    error.setText("Can't find User");
                    return;
                }
            }else{//check if user enter the correct phone number
                String getinfosql = "SELECT * from PERSON WHERE PHONENUMBER = '" +c+"'";
                ResultSet infors = con.createStatement().executeQuery(getinfosql);
                if(infors.next()){
                    un = infors.getString("USERNAME");//get the username
                }else{
                    error.setText("Can't find User");
                    return;
                }
            }
            Customer customer = new Customer(un);//get this customer info
            new GetSingleInfoJFrame(customer).setVisible(true);//print this customer info to frame
            
            
            }catch(SQLException e){
                System.err.println(e);
            }
        }
    }                                      

    private void getinfoActionPerformed(java.awt.event.ActionEvent evt) {                                        
        // TODO add your handling code here:
         try{
            Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/banking", "root", "root");
            String an = String.valueOf(table.getValueAt(table.getSelectedRow(), 0));
            String getaccountsql = "SELECT * from ACCOUNT WHERE ACCOUNTNUMBER = '" +an+"'";
            ResultSet accountrs = con.createStatement().executeQuery(getaccountsql);
            accountrs.next();
            String un = accountrs.getString("USERNAME");//get hte username
            Customer customer = new Customer(un);//get this customer info
            new GetSingleInfoJFrame(customer).setVisible(true);//print this customer info to frame
            
         }catch(SQLException e){
            System.err.println(e);
        }
    }                                       


    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> choose;
    private javax.swing.JLabel error;
    private javax.swing.JButton getinfo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton search;
    private javax.swing.JTextField searchfield;
    private javax.swing.JTable table;
    // End of variables declaration                   

    private void printTable() throws SQLException {
        Connection con = DriverManager.getConnection("jdbc:derby://localhost:1527/banking", "root", "root");    //connect database
        String sql = "SELECT P.ADDRESS, P.EMAIL, P.PHONENUMBER, P.LASTNAME, P.FIRSTNAME, A.ACCOUNTNUMBER, A.CURRENTAMOUNT FROM PERSON P LEFT JOIN ACCOUNT A  ON P.USERNAME=A.USERNAME WHERE P.PERSONTYPE='customer'" ;
        ResultSet rs = con.prepareStatement(sql).executeQuery();
         
         Vector columnName = new Vector();//Vector to put column name
         columnName.addElement("Account Number");//set column name
         columnName.addElement("FirstName");
         columnName.addElement("LastName");
         columnName.addElement("Email");
         columnName.addElement("Phone Number");
         columnName.addElement("Current Amount");
         
         Vector rows = new Vector();
         while(rs.next()){
            Vector newrow = new Vector();
            newrow.addElement(rs.getString("ACCOUNTNUMBER"));
            newrow.addElement(rs.getString("FIRSTNAME"));
            newrow.addElement(rs.getString("LASTNAME"));
            newrow.addElement(rs.getString("EMAIL"));
            newrow.addElement(rs.getString("PHONENUMBER"));
            newrow.addElement(rs.getDouble("CURRENTAMOUNT"));
            rows.addElement(newrow);
         }
         DefaultTableModel datamodel = new DefaultTableModel(rows,columnName){public boolean isCellEditable(int row, int column) { return false;}};
         table.setModel(datamodel);

    }
}
